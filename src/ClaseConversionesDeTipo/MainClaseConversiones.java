//package ClaseConversionesDeTipo;
//
//public class MainClaseConversiones {
//    public static void main(String[] args) {
//1. Conversion implicita de int a double
        // Declaramos una variable entera
//        int numeroEntero = 25;
//        double numeroDecimal = numeroEntero;
//
//        System.out.println("N√∫mero entero: " + numeroEntero);
//        System.out.println("N√∫mero convertido a double: " + numeroDecimal);
//    }
//}

//2.Conversi√≥n expl√≠cita (double a int) con truncamiento
        //Declaramos una variable double con un calor decimal

//        double valorDecimal = 8.75;
//
//        //Conversion explicita (casting) de double a int
//        //Se usa int antes de la variable para reforzar la conversion
//        int valorEntero = (int) valorDecimal; //Los decimales se eliminar√°n
//
//        //Imprimimos los valores originales y convertidos
//        System.out.println("Valor original (double): " + valorDecimal);
//        System.out.println("Valor convertido (int): " + valorEntero);
//    }
//}

//3. Desbordamiento al convertir int a byte

        //N√∫mero mayor al rango de byte (-128 a 127)
//    int numeroGrande = 150;
//
//    //Conversi√≥n expl√≠cita a byte
//    //Como 150 est√° fuera del rango de byte, se producir√° un desbordamiento
//
//    byte numeroPeque√±o = (byte)numeroGrande;
//        // Mostramos los valores
//        System.out.println("N√∫mero original (int): " + numeroGrande);
//        System.out.println("N√∫mero convertido a byte: " + numeroPeque√±o);
//    }
//}
//El n√∫mero 150 excede el rango de byte (-128 a 127).
//Java lo ajusta de forma c√≠clica, resultando en -106.

//4. Conversi√≥n de char a int (C√≥digo ASCII)
        //Declaramos un car√°cter
//        char letra = 'C';
//
//        //Conversi√≥n impl√≠cita de char a int
//        //Java convierte 'C' a su c√≥digo ASCII (67)
//
//        int codigoASCII = letra;
//
//        System.out.println(letra);
//        System.out.println(codigoASCII);
//    }
//}
        //Cada car√°cter en Java tiene un c√≥digo ASCII asociado.
        //'A' se convierte en 65 autom√°ticamente.

//5. Conversi√≥n de String a int con Integer.parseInt()
        //Declaramos una cadena con un n√∫mero en formato texto

//        String texto = "123";
//
//        //Convertimos la cadena a un n√∫mero entero
//
//        int numero = Integer.parseInt(texto);
//
//        System.out.println(texto);
//        System.out.println(numero);
//        ;
//    }
//}

//‚ö† Precauci√≥n:
// Si intentamos convertir "abc" a int, el programa lanzar√° un error.

//6. Conversi√≥n de int a String

//        int n√∫mero = 226;
//
//        Convertimos el n√∫mero a String
//
//        String texto = String.valueOf(n√∫mero);
//
//        System.out.println(n√∫mero);
//        System.out.println(texto);
//    }
//}

//7. Conversi√≥n de double a String

//        double precio = 99.99;
//
//        Conversion a String
//        String textoPrecio = Double.toString(precio);
//
//        System.out.println(textoPrecio);
//    }
//}

//8. Conversion de boolean a String

//        boolean activo = true;
//
//         Conversion a String
//
//        String estado = String.valueOf(activo);
//
//        System.out.println(estado);
//    }
//}

//9. Conversion en operaciones matem√°ticas

//        int a = 5;
//        int b = 2;

        //Division sin conversion (se p√¨erde el decimal)
       // System.out.println("Division entera: " + 5 / 2);

//        Conversion a double para obtener decimales
//        double resultado = (double) a / b;
//        System.out.println("Division con casting: " + resultado);
//    }
//}
    //üí° Explicaci√≥n:
        // Sin conversi√≥n, la divisi√≥n entre enteros descarta los decimales.

//10.  Conversi√≥n de long a int y de float a int

//üîπ Objetivo: Ver c√≥mo se pueden convertir tipos num√©ricos m√°s grandes en m√°s peque√±os usando casting.

        // Declaramos un n√∫mero de tipo long (entero largo)
//        long numeroLargo = 1_000_000_000L; // 1,000 millones
//
//        // Convertimos de long a int (puede haber p√©rdida si el n√∫mero es muy grande)
//        int numeroEntero = (int) numeroLargo;
//
//        // Declaramos un n√∫mero float con decimales
//        float numeroDecimal = 9.99f;
//
//        // Convertimos de float a int (se perder√°n los decimales)
//        int numeroSinDecimales = (int) numeroDecimal;
//
//        // Imprimimos los valores antes y despu√©s de la conversi√≥n
//        System.out.println("N√∫mero original (long): " + numeroLargo);
//        System.out.println("N√∫mero convertido a int: " + numeroEntero);
//        System.out.println("N√∫mero original (float): " + numeroDecimal);
//        System.out.println("N√∫mero convertido a int (sin decimales): " + numeroSinDecimales);
//    }
//}
    //‚ö† Explicaci√≥n:
        //long ‚Üí int: No hay problema en este caso, pero si el n√∫mero fuera mayor a 2,147,483,647, podr√≠a desbordarse.
        //float ‚Üí int: Se eliminan los decimales porque int no los puede almacenar.



